package ${package}.controllers;

import com.alibaba.fastjson.JSON;
import com.springapp.common.controller.BaseController;
import com.springapp.common.page.PageBean;
import com.springapp.common.page.PageParam;
import com.springapp.mvc.vo.DataDto;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import ${package}.entity.${className};
import ${package}.service.${className}Service;

@Controller
@RequestMapping("/api/${classname}")
public class ${className}Controller extends BaseController {

    @Autowired
    ${className}Service ${classname}Service;
#if($listPage == 'listPage')

    @ResponseBody
    @RequestMapping(value = "/list", method = RequestMethod.POST)
    public String list(HttpServletResponse response, HttpServletRequest request,
                       @RequestParam Map<String, Object> paramMap, Integer page, Integer pageSize) {
        String result = "";
        String message = "查询成功";
        DataDto dto = new DataDto();

        PageParam pageParam = new PageParam(page, pageSize);

        PageBean pageBean = ${classname}Service.get${className}PageBean(pageParam, paramMap);
        dto.setTotalItem(pageBean.getTotalCount());
        dto.setData(pageBean.getRecordList());

        dto.setMessage(message);
        result = JSON.toJSONString(dto);

        return result;
    }
#end
#if($add == 'add')

    @ResponseBody
    @RequestMapping(value = "/add", method = RequestMethod.POST)
    public String add(HttpServletResponse response, HttpServletRequest request,
                      @RequestParam Map<String, Object> paramMap) {

        String result = "";
        String message = "添加成功";
        DataDto dto = new DataDto();

        ${className} ${className} = getEntity(paramMap);

        ${classname}Service.add${className}(${className});

        dto.setMessage(message);
        result = JSON.toJSONString(dto);

        return result;
    }
#end
#if($update == 'update')

    @ResponseBody
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    public String update(HttpServletResponse response, HttpServletRequest request,
                         @RequestParam Map<String, Object> paramMap) {

        String result = "";
        String message = "更新成功";
        DataDto dto = new DataDto();

        ${className} ${className} = getEntity(paramMap);

        ${classname}Service.update${className}(${className});

        dto.setMessage(message);
        result = JSON.toJSONString(dto);

        return result;
    }
#end
#if($remove == 'remove')

    @ResponseBody
    @RequestMapping(value = "/remove", method = RequestMethod.POST)
    public String remove(HttpServletResponse response, HttpServletRequest request,
                         Long id) {

        String result = "";
        String message = "删除成功";
        DataDto dto = new DataDto();

        ${classname}Service.remove${className}ByKey(id);

        dto.setMessage(message);
        result = JSON.toJSONString(dto);

        return result;
    }
#end
#if($add == 'add' || $update == 'update')

    private ${className} getEntity(Map<String, Object> paramMap){
        ${className} entity = new ${className}();

#foreach ($column in $columns)
        $column.attrType ${column.attrname} = ($column.attrType) getColumnValue("${column.attrname}", ${column.attrType}.class, paramMap);
#end

#foreach ($column in $columns)
        entity.set${column.attrName}(${column.attrname});
#end

        return  entity;
    }
#end

}
